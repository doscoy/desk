/* -------------------------------------------------------------------------------
	乱数 x or shift 128bit周期
---------------------------------------------------------------------------------*/

// -----------------------------------------------------------------
//	インクルード
#include "rand_xorshift.hpp"

namespace nd {

// *************************************************************************
//	コンストラクタ
RandXorShift::RandXorShift( 
	const unsigned long seed	// I : 乱数の種
	)
	: x_( 123456789 )
	, y_( 362436069 )
	, z_( 521288629 )
	, w_( 88675123 )
	{
	
	int loop_num = seed & 0xff;
	for ( int i = 0; i < loop_num; ++i ){
		getU32();	// ランダマイズの為に読み捨て
	} 
}

// *************************************************************************
//	デストラクタ
RandXorShift::~RandXorShift()
{
	// none
}

// *************************************************************************
//	xorshiftで乱数生成
unsigned long RandXorShift::getU32()
{

	unsigned long t = x_ ^ ( x_ << 11 );
	x_ = y_;
	y_ = z_;
	z_ = w_;
	w_ = ( w_ ^ ( w_ >> 19 ) )  ^  ( t ^ ( t >> 8 ) );
	
	return ( w_ );
}	




} // namespace nd

